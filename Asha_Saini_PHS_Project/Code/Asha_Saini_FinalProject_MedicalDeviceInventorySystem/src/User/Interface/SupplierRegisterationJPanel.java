/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package User.Interface;

import Bsuiness.EcoSystem;
import Business.Role.SupplierEnterpriseAdminRole;
import Business.UserAccount.UserAccount;
import java.awt.Color;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author Asha
 */
public class SupplierRegisterationJPanel extends javax.swing.JPanel {

    /**
     * Creates new form SupplierRegisterationJPanel
     */
    private JPanel userProcessContainer;
    private EcoSystem system;

    public SupplierRegisterationJPanel(JPanel userProcessContainer, EcoSystem system) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.system = system;
        Color c = new Color(0,85,119);
        this.setBackground(c);
        //this.setFont();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        supplierRegisterFormjLabel = new javax.swing.JLabel();
        supplierNamejLabel = new javax.swing.JLabel();
        userNamejLabel = new javax.swing.JLabel();
        passwordjLabel = new javax.swing.JLabel();
        userNamejTextField = new javax.swing.JTextField();
        supplierNamejTextField = new javax.swing.JTextField();
        passwordjPasswordField = new javax.swing.JPasswordField();
        rePasswordjPasswordField = new javax.swing.JPasswordField();
        registerjButton = new javax.swing.JButton();
        rePasswordjLabel = new javax.swing.JLabel();
        securotyQuestionjLabel = new javax.swing.JLabel();
        securityQuestionjTextField = new javax.swing.JTextField();
        securityAnswerjLabel = new javax.swing.JLabel();
        securityAnswerjTextField = new javax.swing.JTextField();

        setBackground(new java.awt.Color(0, 85, 119));

        supplierRegisterFormjLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        supplierRegisterFormjLabel.setForeground(new java.awt.Color(255, 255, 255));
        supplierRegisterFormjLabel.setText("Supplier Registeration Form");

        supplierNamejLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        supplierNamejLabel.setForeground(new java.awt.Color(255, 255, 255));
        supplierNamejLabel.setText("Name");

        userNamejLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        userNamejLabel.setForeground(new java.awt.Color(255, 255, 255));
        userNamejLabel.setText("User Name");

        passwordjLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        passwordjLabel.setForeground(new java.awt.Color(255, 255, 255));
        passwordjLabel.setText("Password");

        userNamejTextField.setBackground(new java.awt.Color(120, 120, 120));
        userNamejTextField.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        userNamejTextField.setForeground(new java.awt.Color(255, 255, 255));

        supplierNamejTextField.setBackground(new java.awt.Color(120, 120, 120));
        supplierNamejTextField.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        supplierNamejTextField.setForeground(new java.awt.Color(255, 255, 255));

        passwordjPasswordField.setBackground(new java.awt.Color(120, 120, 120));
        passwordjPasswordField.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        passwordjPasswordField.setForeground(new java.awt.Color(255, 255, 255));

        rePasswordjPasswordField.setBackground(new java.awt.Color(120, 120, 120));
        rePasswordjPasswordField.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        rePasswordjPasswordField.setForeground(new java.awt.Color(255, 255, 255));

        registerjButton.setBackground(new java.awt.Color(30, 30, 30));
        registerjButton.setForeground(new java.awt.Color(255, 255, 255));
        registerjButton.setText("Register");
        registerjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerjButtonActionPerformed(evt);
            }
        });

        rePasswordjLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        rePasswordjLabel.setForeground(new java.awt.Color(255, 255, 255));
        rePasswordjLabel.setText("Re-Enter Password");

        securotyQuestionjLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        securotyQuestionjLabel.setForeground(new java.awt.Color(255, 255, 255));
        securotyQuestionjLabel.setText("Security question");

        securityQuestionjTextField.setBackground(new java.awt.Color(120, 120, 120));
        securityQuestionjTextField.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        securityQuestionjTextField.setForeground(new java.awt.Color(255, 255, 255));

        securityAnswerjLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        securityAnswerjLabel.setForeground(new java.awt.Color(255, 255, 255));
        securityAnswerjLabel.setText("Answer");

        securityAnswerjTextField.setBackground(new java.awt.Color(120, 120, 120));
        securityAnswerjTextField.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        securityAnswerjTextField.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(306, 306, 306)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(supplierRegisterFormjLabel)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(userNamejLabel)
                            .addComponent(supplierNamejLabel)
                            .addComponent(passwordjLabel)
                            .addComponent(rePasswordjLabel)
                            .addComponent(securotyQuestionjLabel)
                            .addComponent(securityAnswerjLabel))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(registerjButton)
                            .addComponent(rePasswordjPasswordField)
                            .addComponent(supplierNamejTextField)
                            .addComponent(userNamejTextField)
                            .addComponent(passwordjPasswordField)
                            .addComponent(securityQuestionjTextField)
                            .addComponent(securityAnswerjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(297, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {passwordjLabel, rePasswordjLabel, securityAnswerjLabel, securotyQuestionjLabel, supplierNamejLabel, userNamejLabel});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {passwordjPasswordField, rePasswordjPasswordField, securityAnswerjTextField, securityQuestionjTextField, supplierNamejTextField, userNamejTextField});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(supplierRegisterFormjLabel)
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(supplierNamejLabel)
                    .addComponent(supplierNamejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(userNamejLabel)
                    .addComponent(userNamejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passwordjLabel)
                    .addComponent(passwordjPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rePasswordjPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rePasswordjLabel))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(securotyQuestionjLabel)
                    .addComponent(securityQuestionjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(securityAnswerjLabel)
                    .addComponent(securityAnswerjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addComponent(registerjButton)
                .addGap(47, 47, 47))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {passwordjLabel, rePasswordjLabel, securityAnswerjLabel, securotyQuestionjLabel, supplierNamejLabel, userNamejLabel});

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {passwordjPasswordField, rePasswordjPasswordField, securityAnswerjTextField, securityQuestionjTextField, supplierNamejTextField, userNamejTextField});

    }// </editor-fold>//GEN-END:initComponents

    private void registerjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerjButtonActionPerformed
        // TODO add your handling code here:
        //get the suppliers' name
        String supplierName = supplierNamejTextField.getText();

        //get the user name
        String userName = userNamejTextField.getText();

        //get the password
        String passowrd = String.valueOf(passwordjPasswordField.getPassword());

        //get re-enter password
        String rePassword = String.valueOf(rePasswordjPasswordField.getPassword());

        //get security question
        String securityQuestion = securityQuestionjTextField.getText();

        //get securoty answer
        String securityAnswer = securityAnswerjTextField.getText();

        //match both password
        boolean isValid = validateUserInput(supplierName, userName,  passowrd, rePassword, securityQuestion, securityAnswer);
        if (false == isValid) {
            return;
        }
        
        //add the user account to the registered suppliers list
        UserAccount ua = system.getRegisteredSuppliersList().createUserAccount(userName, rePassword, null, new SupplierEnterpriseAdminRole(), "" , securityQuestion, securityAnswer);
        
    }//GEN-LAST:event_registerjButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel passwordjLabel;
    private javax.swing.JPasswordField passwordjPasswordField;
    private javax.swing.JLabel rePasswordjLabel;
    private javax.swing.JPasswordField rePasswordjPasswordField;
    private javax.swing.JButton registerjButton;
    private javax.swing.JLabel securityAnswerjLabel;
    private javax.swing.JTextField securityAnswerjTextField;
    private javax.swing.JTextField securityQuestionjTextField;
    private javax.swing.JLabel securotyQuestionjLabel;
    private javax.swing.JLabel supplierNamejLabel;
    private javax.swing.JTextField supplierNamejTextField;
    private javax.swing.JLabel supplierRegisterFormjLabel;
    private javax.swing.JLabel userNamejLabel;
    private javax.swing.JTextField userNamejTextField;
    // End of variables declaration//GEN-END:variables

    private boolean validateUserInput(String supplierName, String userName, String password, String rePassword, String securityQuestion, String securityAnswer) {
        //check if any field is empty
        if (true == supplierName.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter a valid name.", "Error", JOptionPane.WARNING_MESSAGE);
            return false;                    
        }

        if (true == userName.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter a valid user name.", "Error", JOptionPane.WARNING_MESSAGE);
            return false; 
        }

        if (true == password.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter a valid password.", "Error", JOptionPane.WARNING_MESSAGE);
            return false; 
        }

        if (true == rePassword.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter a valid re-password.", "Error", JOptionPane.WARNING_MESSAGE);
            return false; 
        }

        if (true == securityQuestion.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter a valid security question.", "Error", JOptionPane.WARNING_MESSAGE);
            return false; 
        }

        if (true == securityAnswer.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter a valid security answer.", "Error", JOptionPane.WARNING_MESSAGE);
            return false; 
        }
        
        //check if both the passwords macthes
        if(false == password.equals(rePassword)){
            JOptionPane.showMessageDialog(this, "Passwords do not match.", "Error", JOptionPane.WARNING_MESSAGE);
            return false;             
        }
        return true;
    }
}
