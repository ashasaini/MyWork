/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package User.Interface.SystemAdminRole;

import Bsuiness.EcoSystem;
import Business.Employee.Employee;
import Business.Organization.Organization;
import Business.Organization.ProcurementAdminOrganization;
import Business.Role.Role;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.awt.Color;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Asha
 */
public class ManageProcurementUserAccountJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageProcurementUserAccountJPanel1
     */
    private JPanel userProcessContainer;
    private EcoSystem system;
    public ManageProcurementUserAccountJPanel(JPanel userProcessContainer, EcoSystem system) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.system = system;
 Color c = new Color(0, 85, 119);
        this.setBackground(c);
        addNewUserAccountjPanel.setVisible(false);
        populateOrganizationComboBox();
        populateUserAccountTable((Organization) organizationjComboBox.getItemAt(0));
    }

    private void populateOrganizationComboBox() {
        organizationjComboBox.removeAllItems();

        for (Organization organization : system.getProcurementEnterprise().getOrganizationDirectory().getOrganizationList()) {
            organizationjComboBox.addItem(organization);
        }
    }

    private void populateUserAccountTable(Organization org) {
        DefaultTableModel model = (DefaultTableModel) userAccountjTable.getModel();

        model.setRowCount(0);
        for (UserAccount ua : org.getUserAccountDirectory().getUserAccountList()) {
            Object row[] = new Object[4];
            row[0] = ua;            
            row[1] = ua.getPassword();
            row[2] = ua.getRole();
            row[3] = ua.getStatus();
            ((DefaultTableModel) userAccountjTable.getModel()).addRow(row);
        }
    }

    public void populateEmployeeComboBox(Organization organization){
        employeejComboBox.removeAllItems();
        
        for (Employee employee : organization.getEmployeeDirectory().getEmployeeList()){
            employeejComboBox.addItem(employee);
        }
    }
    
    private void populateRoleComboBox(Organization organization){
        rolejComboBox.removeAllItems();
        for (Role role : organization.getSupportedRole()){
            rolejComboBox.addItem(role);
        }
    }

    private void populateAddUserAccountOrganizationComboBox() {
         addUserAccountorganizationjComboBox.removeAllItems();

        for (Organization organization : system.getProcurementEnterprise().getOrganizationDirectory().getOrganizationList()) {
            addUserAccountorganizationjComboBox.addItem(organization);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel1 = new javax.swing.JPanel();
        refreshjButton = new javax.swing.JButton();
        titlejLabel = new javax.swing.JLabel();
        organizationjComboBox = new javax.swing.JComboBox();
        addjButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        userAccountjTable = new javax.swing.JTable();
        organizationjLabel = new javax.swing.JLabel();
        backjButton = new javax.swing.JButton();
        addNewUserAccountjPanel = new javax.swing.JPanel();
        titlejLabel1 = new javax.swing.JLabel();
        userNamejLabel = new javax.swing.JLabel();
        userNamejTextField = new javax.swing.JTextField();
        passwordjLabel = new javax.swing.JLabel();
        passwordjTextField = new javax.swing.JTextField();
        addUserAccOrganizationjLabel = new javax.swing.JLabel();
        addUserAccountorganizationjComboBox = new javax.swing.JComboBox();
        employeejLabel = new javax.swing.JLabel();
        employeejComboBox = new javax.swing.JComboBox();
        statusjLabel = new javax.swing.JLabel();
        activejRadioButton = new javax.swing.JRadioButton();
        disabledjRadioButton = new javax.swing.JRadioButton();
        donejButton = new javax.swing.JButton();
        addUserjButton = new javax.swing.JButton();
        rolejLabel = new javax.swing.JLabel();
        rolejComboBox = new javax.swing.JComboBox();

        jSplitPane1.setDividerLocation(500);

        jPanel1.setBackground(new java.awt.Color(0, 85, 119));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.setMinimumSize(new java.awt.Dimension(550, 450));

        refreshjButton.setBackground(new java.awt.Color(30, 30, 30));
        refreshjButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        refreshjButton.setForeground(new java.awt.Color(255, 255, 255));
        refreshjButton.setText("Refresh");
        refreshjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshjButtonActionPerformed(evt);
            }
        });

        titlejLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        titlejLabel.setForeground(new java.awt.Color(255, 255, 255));
        titlejLabel.setText("Supplier Admin - Manage User Accounts");

        organizationjComboBox.setBackground(new java.awt.Color(120, 120, 120));
        organizationjComboBox.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        organizationjComboBox.setForeground(new java.awt.Color(255, 255, 255));
        organizationjComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                organizationjComboBoxActionPerformed(evt);
            }
        });

        addjButton.setBackground(new java.awt.Color(30, 30, 30));
        addjButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        addjButton.setForeground(new java.awt.Color(255, 255, 255));
        addjButton.setText("Add User Account");
        addjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addjButtonActionPerformed(evt);
            }
        });

        userAccountjTable.setForeground(new java.awt.Color(255, 255, 255));
        userAccountjTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Username", "Password", "Role", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(userAccountjTable);

        organizationjLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        organizationjLabel.setForeground(new java.awt.Color(255, 255, 255));
        organizationjLabel.setText("Organization");

        backjButton.setBackground(new java.awt.Color(30, 30, 30));
        backjButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        backjButton.setForeground(new java.awt.Color(255, 255, 255));
        backjButton.setText("<< Back");
        backjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backjButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(titlejLabel)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(organizationjLabel)
                        .addGap(18, 18, 18)
                        .addComponent(organizationjComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 437, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(backjButton)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(refreshjButton)
                            .addGap(18, 18, 18)
                            .addComponent(addjButton))))
                .addContainerGap(84, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(titlejLabel)
                .addGap(38, 38, 38)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(organizationjLabel)
                    .addComponent(organizationjComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(54, 54, 54)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(refreshjButton)
                    .addComponent(addjButton)
                    .addComponent(backjButton))
                .addContainerGap(95, Short.MAX_VALUE))
        );

        jSplitPane1.setLeftComponent(jPanel1);

        addNewUserAccountjPanel.setBackground(new java.awt.Color(0, 85, 119));
        addNewUserAccountjPanel.setForeground(new java.awt.Color(255, 255, 255));
        addNewUserAccountjPanel.setMinimumSize(new java.awt.Dimension(450, 450));

        titlejLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        titlejLabel1.setForeground(new java.awt.Color(255, 255, 255));
        titlejLabel1.setText("SupplierAdmin - Add New User Account");

        userNamejLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        userNamejLabel.setForeground(new java.awt.Color(255, 255, 255));
        userNamejLabel.setText("UserName ");

        userNamejTextField.setBackground(new java.awt.Color(120, 120, 120));
        userNamejTextField.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        userNamejTextField.setForeground(new java.awt.Color(255, 255, 255));

        passwordjLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        passwordjLabel.setForeground(new java.awt.Color(255, 255, 255));
        passwordjLabel.setText("Password");

        passwordjTextField.setBackground(new java.awt.Color(120, 120, 120));
        passwordjTextField.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        passwordjTextField.setForeground(new java.awt.Color(255, 255, 255));

        addUserAccOrganizationjLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        addUserAccOrganizationjLabel.setForeground(new java.awt.Color(255, 255, 255));
        addUserAccOrganizationjLabel.setText("Organization");

        addUserAccountorganizationjComboBox.setBackground(new java.awt.Color(120, 120, 120));
        addUserAccountorganizationjComboBox.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        addUserAccountorganizationjComboBox.setForeground(new java.awt.Color(255, 255, 255));
        addUserAccountorganizationjComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addUserAccountorganizationjComboBoxActionPerformed(evt);
            }
        });

        employeejLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        employeejLabel.setForeground(new java.awt.Color(255, 255, 255));
        employeejLabel.setText("Employee");

        employeejComboBox.setBackground(new java.awt.Color(120, 120, 120));
        employeejComboBox.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        employeejComboBox.setForeground(new java.awt.Color(255, 255, 255));

        statusjLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        statusjLabel.setForeground(new java.awt.Color(255, 255, 255));
        statusjLabel.setText("Status");

        activejRadioButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        activejRadioButton.setForeground(new java.awt.Color(255, 255, 255));
        activejRadioButton.setSelected(true);
        activejRadioButton.setText("Active");

        disabledjRadioButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        disabledjRadioButton.setForeground(new java.awt.Color(255, 255, 255));
        disabledjRadioButton.setText("Disabled");

        donejButton.setBackground(new java.awt.Color(30, 30, 30));
        donejButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        donejButton.setForeground(new java.awt.Color(255, 255, 255));
        donejButton.setText("Done");
        donejButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                donejButtonActionPerformed(evt);
            }
        });

        addUserjButton.setBackground(new java.awt.Color(30, 30, 30));
        addUserjButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        addUserjButton.setForeground(new java.awt.Color(255, 255, 255));
        addUserjButton.setText("Add User");
        addUserjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addUserjButtonActionPerformed(evt);
            }
        });

        rolejLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        rolejLabel.setForeground(new java.awt.Color(255, 255, 255));
        rolejLabel.setText("Role");

        rolejComboBox.setBackground(new java.awt.Color(120, 120, 120));
        rolejComboBox.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        rolejComboBox.setForeground(new java.awt.Color(255, 255, 255));
        rolejComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                rolejComboBoxItemStateChanged(evt);
            }
        });
        rolejComboBox.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                rolejComboBoxFocusLost(evt);
            }
        });
        rolejComboBox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rolejComboBoxMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                rolejComboBoxMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                rolejComboBoxMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                rolejComboBoxMouseReleased(evt);
            }
        });
        rolejComboBox.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
                rolejComboBoxCaretPositionChanged(evt);
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                rolejComboBoxInputMethodTextChanged(evt);
            }
        });
        rolejComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rolejComboBoxActionPerformed(evt);
            }
        });
        rolejComboBox.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                rolejComboBoxPropertyChange(evt);
            }
        });
        rolejComboBox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                rolejComboBoxKeyReleased(evt);
            }
        });
        rolejComboBox.addVetoableChangeListener(new java.beans.VetoableChangeListener() {
            public void vetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {
                rolejComboBoxVetoableChange(evt);
            }
        });

        javax.swing.GroupLayout addNewUserAccountjPanelLayout = new javax.swing.GroupLayout(addNewUserAccountjPanel);
        addNewUserAccountjPanel.setLayout(addNewUserAccountjPanelLayout);
        addNewUserAccountjPanelLayout.setHorizontalGroup(
            addNewUserAccountjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addNewUserAccountjPanelLayout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(addNewUserAccountjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(titlejLabel1)
                    .addGroup(addNewUserAccountjPanelLayout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addGroup(addNewUserAccountjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(addNewUserAccountjPanelLayout.createSequentialGroup()
                                .addComponent(userNamejLabel)
                                .addGap(18, 18, 18)
                                .addComponent(userNamejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(addNewUserAccountjPanelLayout.createSequentialGroup()
                                .addComponent(passwordjLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(passwordjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(addNewUserAccountjPanelLayout.createSequentialGroup()
                        .addGroup(addNewUserAccountjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(addNewUserAccountjPanelLayout.createSequentialGroup()
                                .addGap(55, 55, 55)
                                .addGroup(addNewUserAccountjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(addNewUserAccountjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(employeejLabel)
                                        .addComponent(addUserAccOrganizationjLabel)
                                        .addComponent(rolejLabel))
                                    .addGroup(addNewUserAccountjPanelLayout.createSequentialGroup()
                                        .addGap(20, 20, 20)
                                        .addComponent(donejButton)))
                                .addGap(17, 17, 17))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addNewUserAccountjPanelLayout.createSequentialGroup()
                                .addComponent(statusjLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)))
                        .addGroup(addNewUserAccountjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(addNewUserAccountjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(addNewUserAccountjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(employeejComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(addNewUserAccountjPanelLayout.createSequentialGroup()
                                        .addComponent(activejRadioButton)
                                        .addGap(18, 18, 18)
                                        .addComponent(disabledjRadioButton))
                                    .addComponent(addUserAccountorganizationjComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(rolejComboBox, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(addNewUserAccountjPanelLayout.createSequentialGroup()
                                .addGap(81, 81, 81)
                                .addComponent(addUserjButton, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(87, 87, 87))
        );

        addNewUserAccountjPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {addUserAccountorganizationjComboBox, employeejComboBox, passwordjTextField, rolejComboBox, userNamejTextField});

        addNewUserAccountjPanelLayout.setVerticalGroup(
            addNewUserAccountjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addNewUserAccountjPanelLayout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(titlejLabel1)
                .addGap(42, 42, 42)
                .addGroup(addNewUserAccountjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userNamejLabel)
                    .addComponent(userNamejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(addNewUserAccountjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passwordjLabel)
                    .addComponent(passwordjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(addNewUserAccountjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addUserAccOrganizationjLabel)
                    .addComponent(addUserAccountorganizationjComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(addNewUserAccountjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(employeejLabel)
                    .addComponent(employeejComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(addNewUserAccountjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rolejLabel)
                    .addComponent(rolejComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(addNewUserAccountjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(statusjLabel)
                    .addComponent(activejRadioButton)
                    .addComponent(disabledjRadioButton))
                .addGap(33, 33, 33)
                .addGroup(addNewUserAccountjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(donejButton)
                    .addComponent(addUserjButton))
                .addContainerGap(62, Short.MAX_VALUE))
        );

        addNewUserAccountjPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {addUserAccountorganizationjComboBox, employeejComboBox, passwordjTextField, rolejComboBox, userNamejTextField});

        jSplitPane1.setRightComponent(addNewUserAccountjPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1007, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void refreshjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshjButtonActionPerformed
        // TODO add your handling code here:
        Organization org = (Organization) organizationjComboBox.getSelectedItem();
        if (null != org) {
            populateUserAccountTable(org);
        }
    }//GEN-LAST:event_refreshjButtonActionPerformed

    private void organizationjComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_organizationjComboBoxActionPerformed
        // TODO add your handling code here:
        Organization org = (Organization)organizationjComboBox.getSelectedItem();
        if(null != org){
            String str = org.getOrganizationName();
            if(true == str.equalsIgnoreCase("ProcurementAdminOrganization")){
                ProcurementAdminOrganization o = (ProcurementAdminOrganization)org;
                populateEmployeeComboBox(o);
            }
//            else if(true == str.equalsIgnoreCase("SupplierShippingOrganization")) {
//                SupplierShippingOrganization o = (SupplierShippingOrganization)org;
//                populateEmployeeComboBox(o);
//            }
        }
    }//GEN-LAST:event_organizationjComboBoxActionPerformed

    private void addjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addjButtonActionPerformed
        // TODO add your handling code here:
        addNewUserAccountjPanel.setVisible(true);
        populateAddUserAccountOrganizationComboBox();
        //        AddUserAccountJPanel panel = new AddUserAccountJPanel(userProcessContainer, orgDir,
            //            //supplierDirectory, customerDirectory, userAccountDirectory
            //            this);
        //        userProcessContainer.add("AddUserAccountJPanel", panel);
        //        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        //        layout.next(userProcessContainer);
    }//GEN-LAST:event_addjButtonActionPerformed

    private void backjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backjButtonActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backjButtonActionPerformed

    private void addUserAccountorganizationjComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addUserAccountorganizationjComboBoxActionPerformed
        // TODO add your handling code here:
        Organization org = (Organization) addUserAccountorganizationjComboBox.getSelectedItem();
        if (null != org) {
            populateEmployeeComboBox(org);
            populateRoleComboBox(org);
        }
    }//GEN-LAST:event_addUserAccountorganizationjComboBoxActionPerformed

    private void donejButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_donejButtonActionPerformed
        // TODO add your handling code here:
        addNewUserAccountjPanel.setVisible(false);
        //        userProcessContainer.remove(this);
        //        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        //        layout.previous(userProcessContainer);
        //
        //        Organization org = (Organization) organizationjComboBox.getSelectedItem();
        //        if (null != org) {
            //            manageUserAccountsJPanel.refreshTable(org);
            //        }
    }//GEN-LAST:event_donejButtonActionPerformed

    private void addUserjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addUserjButtonActionPerformed
        // TODO add your handling code here:
        try {
            Organization org = (Organization) addUserAccountorganizationjComboBox.getSelectedItem();
            if (null != org) {
                if (0 == org.getEmployeeDirectory().getEmployeeList().size()) {//implies no employees exists
                    return;
                }
            }

            //get the user name
            String userName = userNamejTextField.getText();
            if ((userName.equals("")) || (null == userName)) {
                JOptionPane.showMessageDialog(this, "Please enter a valid user name");
                return;
            }

            //get the password
            String password = passwordjTextField.getText();
            if ((password.equals("")) || (null == password)) {
                JOptionPane.showMessageDialog(this, "Please enter a valid password");
                return;
            }

            //get the employee
            if (0 == employeejComboBox.getItemCount()) {
                return;
            }

            Employee emp = (Employee) employeejComboBox.getSelectedItem();
            if (null == emp) {
                JOptionPane.showMessageDialog(this, "Please select an employee");
                return;
            }
            String firstName = employeejComboBox.getSelectedItem().toString();

            //get the role
            if (rolejComboBox.getItemCount() == 0) {
                return;
            }

            Role role = (Role) rolejComboBox.getSelectedItem();
            if ((null == role)) {
                JOptionPane.showMessageDialog(this, "Please select a role");
                return;
            }

            //get the status
            String status = "";
            if (activejRadioButton.isSelected()) {
                status = "active";
            } else {
                status = "disabled";
            }

            //create user account
            UserAccount ua = org.getUserAccountDirectory().createUserAccount(userName, password, emp, role, status, "", "");
            if (null == ua) {
                JOptionPane.showMessageDialog(this, "Unable to add new user account");
                return;
            }
            populateUserAccountTable(org);
            //WorkQueue w = new WorkQueue();
            //ua.setWorkQueue(w);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "An error occurred");
        }
    }//GEN-LAST:event_addUserjButtonActionPerformed

    private void rolejComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_rolejComboBoxItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_rolejComboBoxItemStateChanged

    private void rolejComboBoxFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_rolejComboBoxFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_rolejComboBoxFocusLost

    private void rolejComboBoxMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rolejComboBoxMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_rolejComboBoxMouseClicked

    private void rolejComboBoxMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rolejComboBoxMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_rolejComboBoxMouseExited

    private void rolejComboBoxMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rolejComboBoxMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_rolejComboBoxMousePressed

    private void rolejComboBoxMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rolejComboBoxMouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_rolejComboBoxMouseReleased

    private void rolejComboBoxCaretPositionChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_rolejComboBoxCaretPositionChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_rolejComboBoxCaretPositionChanged

    private void rolejComboBoxInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_rolejComboBoxInputMethodTextChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_rolejComboBoxInputMethodTextChanged

    private void rolejComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rolejComboBoxActionPerformed
        // TODO add your handling code here:
        //        userjComboBox.removeAllItems();
        //
        //        Role role = (Role) rolejComboBox.getSelectedItem();
        //        //        if (null == role) {
            //            //            JOptionPane.showMessageDialog(this, "Please select a role");
            //            //            return;
            //            //        }
        //
        //        Organization org = (Organization) organizationjComboBox.getSelectedItem();
        //        if (null != org) {
            //            String roleStr = String.valueOf(role);
            //            if (true == roleStr.equalsIgnoreCase("SupplierRole")) {
                //                SupplierOrganization sOrg = (SupplierOrganization) org;
                //                if (0 == sOrg.getSupplierDir().getSupplierDict().size()) {
                    //                    JOptionPane.showMessageDialog(this, "No suppliers present for user account creation");
                    //                    return;
                    //                }
                //                for (Supplier s : sOrg.getSupplierDir().getSupplierDict()) {
                    //                    userjComboBox.addItem(s);
                    //                }
                //            }
            //
            //            if (true == roleStr.equalsIgnoreCase("CustomerRole")) {
                //                CustomerOrganization cOrg = (CustomerOrganization) org;
                //                if (0 == cOrg.getCustomerDir().getCustomerList().size()) {
                    //                    JOptionPane.showMessageDialog(this, "No customers present for user account creation");
                    //                    return;
                    //                }
                //                for (Customer c : cOrg.getCustomerDir().getCustomerList()) {
                    //                    userjComboBox.addItem(c);
                    //                }
                //            }
            //
            //            if (true == roleStr.equalsIgnoreCase("SalesRole")) {
                //                SalesOrganization sOrg = (SalesOrganization) org;
                //                if (0 == sOrg.getEmployeeDirectory().getEmployeeList().size()) {
                    //                    JOptionPane.showMessageDialog(this, "No Sales representatives present for user account creation");
                    //                    return;
                    //                }
                //                for (Employee e : sOrg.getEmployeeDirectory().getEmployeeList()) {
                    //                    userjComboBox.addItem(e);
                    //                }
                //            }
            //
            //            if (true == roleStr.equalsIgnoreCase("ShippingRole")) {
                //                ShippingOrganization sOrg = (ShippingOrganization) org;
                //                if (0 == sOrg.getEmployeeDirectory().getEmployeeList().size()) {
                    //                    JOptionPane.showMessageDialog(this, "No Shipping representatives present for user account creation");
                    //                    return;
                    //                }
                //                for (Employee e : sOrg.getEmployeeDirectory().getEmployeeList()) {
                    //                    userjComboBox.addItem(e);
                    //                }
                //            }
            //        }
    }//GEN-LAST:event_rolejComboBoxActionPerformed

    private void rolejComboBoxPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_rolejComboBoxPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_rolejComboBoxPropertyChange

    private void rolejComboBoxKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_rolejComboBoxKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_rolejComboBoxKeyReleased

    private void rolejComboBoxVetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {//GEN-FIRST:event_rolejComboBoxVetoableChange
        // TODO add your handling code here:
    }//GEN-LAST:event_rolejComboBoxVetoableChange


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton activejRadioButton;
    private javax.swing.JPanel addNewUserAccountjPanel;
    private javax.swing.JLabel addUserAccOrganizationjLabel;
    private javax.swing.JComboBox addUserAccountorganizationjComboBox;
    private javax.swing.JButton addUserjButton;
    private javax.swing.JButton addjButton;
    private javax.swing.JButton backjButton;
    private javax.swing.JRadioButton disabledjRadioButton;
    private javax.swing.JButton donejButton;
    private javax.swing.JComboBox employeejComboBox;
    private javax.swing.JLabel employeejLabel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JComboBox organizationjComboBox;
    private javax.swing.JLabel organizationjLabel;
    private javax.swing.JLabel passwordjLabel;
    private javax.swing.JTextField passwordjTextField;
    private javax.swing.JButton refreshjButton;
    private javax.swing.JComboBox rolejComboBox;
    private javax.swing.JLabel rolejLabel;
    private javax.swing.JLabel statusjLabel;
    private javax.swing.JLabel titlejLabel;
    private javax.swing.JLabel titlejLabel1;
    private javax.swing.JTable userAccountjTable;
    private javax.swing.JLabel userNamejLabel;
    private javax.swing.JTextField userNamejTextField;
    // End of variables declaration//GEN-END:variables
}
