/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package User.Interface.SupplierEnterpriseAdminRole;

import java.awt.Color;

/**
 *
 * @author Asha
 */
public class AddUserAccountJPanel extends javax.swing.JPanel {

    /**
     * Creates new form AddUserAccountJPanel
     */
    public AddUserAccountJPanel() {
        initComponents();
         Color c = new Color(0, 85, 119);
        this.setBackground(c);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        userNamejTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        passwordjTextField = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        organizationjComboBox = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        rolejComboBox = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        userjComboBox = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        activejRadioButton = new javax.swing.JRadioButton();
        disabledjRadioButton = new javax.swing.JRadioButton();
        backjButton = new javax.swing.JButton();
        addUserjButton = new javax.swing.JButton();
        titlejLabel = new javax.swing.JLabel();

        setBackground(new java.awt.Color(0, 85, 119));
        setForeground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("UserName ");

        userNamejTextField.setBackground(new java.awt.Color(120, 120, 120));
        userNamejTextField.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        userNamejTextField.setForeground(new java.awt.Color(255, 255, 255));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Password");

        passwordjTextField.setBackground(new java.awt.Color(120, 120, 120));
        passwordjTextField.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        passwordjTextField.setForeground(new java.awt.Color(255, 255, 255));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Organization");

        organizationjComboBox.setBackground(new java.awt.Color(120, 120, 120));
        organizationjComboBox.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        organizationjComboBox.setForeground(new java.awt.Color(255, 255, 255));
        organizationjComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                organizationjComboBoxActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Role");

        rolejComboBox.setBackground(new java.awt.Color(120, 120, 120));
        rolejComboBox.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        rolejComboBox.setForeground(new java.awt.Color(255, 255, 255));
        rolejComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                rolejComboBoxItemStateChanged(evt);
            }
        });
        rolejComboBox.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                rolejComboBoxFocusLost(evt);
            }
        });
        rolejComboBox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rolejComboBoxMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                rolejComboBoxMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                rolejComboBoxMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                rolejComboBoxMouseReleased(evt);
            }
        });
        rolejComboBox.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
                rolejComboBoxCaretPositionChanged(evt);
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                rolejComboBoxInputMethodTextChanged(evt);
            }
        });
        rolejComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rolejComboBoxActionPerformed(evt);
            }
        });
        rolejComboBox.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                rolejComboBoxPropertyChange(evt);
            }
        });
        rolejComboBox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                rolejComboBoxKeyReleased(evt);
            }
        });
        rolejComboBox.addVetoableChangeListener(new java.beans.VetoableChangeListener() {
            public void vetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {
                rolejComboBoxVetoableChange(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("User");

        userjComboBox.setBackground(new java.awt.Color(120, 120, 120));
        userjComboBox.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        userjComboBox.setForeground(new java.awt.Color(255, 255, 255));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Status");

        activejRadioButton.setBackground(new java.awt.Color(120, 120, 120));
        activejRadioButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        activejRadioButton.setForeground(new java.awt.Color(255, 255, 255));
        activejRadioButton.setSelected(true);
        activejRadioButton.setText("Active");

        disabledjRadioButton.setBackground(new java.awt.Color(120, 120, 120));
        disabledjRadioButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        disabledjRadioButton.setForeground(new java.awt.Color(255, 255, 255));
        disabledjRadioButton.setText("Disabled");

        backjButton.setBackground(new java.awt.Color(30, 30, 30));
        backjButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        backjButton.setForeground(new java.awt.Color(255, 255, 255));
        backjButton.setText("<< Back");
        backjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backjButtonActionPerformed(evt);
            }
        });

        addUserjButton.setBackground(new java.awt.Color(30, 30, 30));
        addUserjButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        addUserjButton.setForeground(new java.awt.Color(255, 255, 255));
        addUserjButton.setText("Add User");
        addUserjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addUserjButtonActionPerformed(evt);
            }
        });

        titlejLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        titlejLabel.setForeground(new java.awt.Color(255, 255, 255));
        titlejLabel.setText("Supplier Admin - Add User Account");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(100, 100, 100)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(backjButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(addUserjButton, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(titlejLabel)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(userNamejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(rolejComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(activejRadioButton)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(disabledjRadioButton))
                                        .addComponent(organizationjComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(userjComboBox, 0, 158, Short.MAX_VALUE)
                                        .addComponent(passwordjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(28, 88, Short.MAX_VALUE))))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {organizationjComboBox, passwordjTextField, rolejComboBox, userNamejTextField, userjComboBox});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(titlejLabel)
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(userNamejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(passwordjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel7)
                    .addComponent(organizationjComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(rolejComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userjComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(activejRadioButton)
                    .addComponent(disabledjRadioButton))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backjButton)
                    .addComponent(addUserjButton))
                .addContainerGap(35, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {addUserjButton, backjButton, organizationjComboBox, passwordjTextField, rolejComboBox, userNamejTextField, userjComboBox});

    }// </editor-fold>//GEN-END:initComponents

    private void organizationjComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_organizationjComboBoxActionPerformed
        // TODO add your handling code here:
//        Organization org = (Organization) organizationjComboBox.getSelectedItem();
//        if (null != org) {
//            populateRoleComboBox(org);
//        }
    }//GEN-LAST:event_organizationjComboBoxActionPerformed

    private void rolejComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_rolejComboBoxItemStateChanged
        // TODO add your handling code here:

    }//GEN-LAST:event_rolejComboBoxItemStateChanged

    private void rolejComboBoxFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_rolejComboBoxFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_rolejComboBoxFocusLost

    private void rolejComboBoxMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rolejComboBoxMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_rolejComboBoxMouseClicked

    private void rolejComboBoxMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rolejComboBoxMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_rolejComboBoxMouseExited

    private void rolejComboBoxMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rolejComboBoxMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_rolejComboBoxMousePressed

    private void rolejComboBoxMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rolejComboBoxMouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_rolejComboBoxMouseReleased

    private void rolejComboBoxCaretPositionChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_rolejComboBoxCaretPositionChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_rolejComboBoxCaretPositionChanged

    private void rolejComboBoxInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_rolejComboBoxInputMethodTextChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_rolejComboBoxInputMethodTextChanged

    private void rolejComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rolejComboBoxActionPerformed
        // TODO add your handling code here:
//        userjComboBox.removeAllItems();
//
//        Role role = (Role) rolejComboBox.getSelectedItem();
//        //        if (null == role) {
//            //            JOptionPane.showMessageDialog(this, "Please select a role");
//            //            return;
//            //        }
//
//        Organization org = (Organization) organizationjComboBox.getSelectedItem();
//        if (null != org) {
//            String roleStr = String.valueOf(role);
//            if (true == roleStr.equalsIgnoreCase("SupplierRole")) {
//                SupplierOrganization sOrg = (SupplierOrganization) org;
//                if (0 == sOrg.getSupplierDir().getSupplierDict().size()) {
//                    JOptionPane.showMessageDialog(this, "No suppliers present for user account creation");
//                    return;
//                }
//                for (Supplier s : sOrg.getSupplierDir().getSupplierDict()) {
//                    userjComboBox.addItem(s);
//                }
//            }
//
//            if (true == roleStr.equalsIgnoreCase("CustomerRole")) {
//                CustomerOrganization cOrg = (CustomerOrganization) org;
//                if (0 == cOrg.getCustomerDir().getCustomerList().size()) {
//                    JOptionPane.showMessageDialog(this, "No customers present for user account creation");
//                    return;
//                }
//                for (Customer c : cOrg.getCustomerDir().getCustomerList()) {
//                    userjComboBox.addItem(c);
//                }
//            }
//
//            if (true == roleStr.equalsIgnoreCase("SalesRole")) {
//                SalesOrganization sOrg = (SalesOrganization) org;
//                if (0 == sOrg.getEmployeeDirectory().getEmployeeList().size()) {
//                    JOptionPane.showMessageDialog(this, "No Sales representatives present for user account creation");
//                    return;
//                }
//                for (Employee e : sOrg.getEmployeeDirectory().getEmployeeList()) {
//                    userjComboBox.addItem(e);
//                }
//            }
//
//            if (true == roleStr.equalsIgnoreCase("ShippingRole")) {
//                ShippingOrganization sOrg = (ShippingOrganization) org;
//                if (0 == sOrg.getEmployeeDirectory().getEmployeeList().size()) {
//                    JOptionPane.showMessageDialog(this, "No Shipping representatives present for user account creation");
//                    return;
//                }
//                for (Employee e : sOrg.getEmployeeDirectory().getEmployeeList()) {
//                    userjComboBox.addItem(e);
//                }
//            }
//        }
    }//GEN-LAST:event_rolejComboBoxActionPerformed

    private void rolejComboBoxPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_rolejComboBoxPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_rolejComboBoxPropertyChange

    private void rolejComboBoxKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_rolejComboBoxKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_rolejComboBoxKeyReleased

    private void rolejComboBoxVetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {//GEN-FIRST:event_rolejComboBoxVetoableChange
        // TODO add your handling code here:
    }//GEN-LAST:event_rolejComboBoxVetoableChange

    private void backjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backjButtonActionPerformed
        // TODO add your handling code here:
//        userProcessContainer.remove(this);
//        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
//        layout.previous(userProcessContainer);
//
//        Organization org = (Organization) organizationjComboBox.getSelectedItem();
//        if (null != org) {
//            manageUserAccountsJPanel.refreshTable(org);
//        }
    }//GEN-LAST:event_backjButtonActionPerformed

    private void addUserjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addUserjButtonActionPerformed
        // TODO add your handling code here:
//        try {
//            Organization org = (Organization) organizationjComboBox.getSelectedItem();
//            if (null != org) {
//                //                    if (0 == org.getSupplierDir().getSupplierDict().size() || 0 == org.getCustomerDir().getCustomerList().size()) {
//                    //                        return;
//                    //                    }
//            }
//            String userName = userNamejTextField.getText();
//            if ((userName.equals("")) || (null == userName)) {
//                JOptionPane.showMessageDialog(this, "Please enter a valid user name");
//                return;
//            }
//
//            String password = passwordjTextField.getText();
//            if ((password.equals("")) || (null == password)) {
//                JOptionPane.showMessageDialog(this, "Please enter a valid password");
//                return;
//            }
//
//            if (rolejComboBox.getItemCount() == 0) {
//                return;
//            }
//
//            Role role = (Role) rolejComboBox.getSelectedItem();
//            if ((null == role)) {
//                JOptionPane.showMessageDialog(this, "Please select a role");
//                return;
//            }
//
//            String status = "";
//            if (activejRadioButton.isSelected()) {
//                status = "active";
//            } else {
//                status = "disabled";
//            }
//
//            if (0 == userjComboBox.getItemCount()) {
//                return;
//            }
//
//            Person person = (Person) userjComboBox.getSelectedItem();
//            if (null == person) {
//                JOptionPane.showMessageDialog(this, "Please select a person");
//                return;
//            }
//            String firstName = userjComboBox.getSelectedItem().toString();
//
//            //get the employee
//            Object obj = userjComboBox.getSelectedItem();
//            if (null == obj) {
//                JOptionPane.showMessageDialog(this, "Please select a user");
//                return;
//            }
//            //create user account
//            UserAccount ua = org.getUserAccountDirectory().newUserAccount();
//            if (null == ua) {
//                JOptionPane.showMessageDialog(this, "Unable to add new user account");
//                return;
//            }
//
//            ua.setUsername(userName);
//            ua.setPassword(password);
//            Employee e = new Employee();
//            e.setFirstName(firstName);
//            e.setName(firstName);
//            WorkQueue w = new WorkQueue();
//
//            ua.setEmployee(e);
//            ua.setWorkQueue(w);
//
//            ua.setPerson(person);
//            ua.getPerson().setFirstName(firstName);
//            ua.setRole(role);
//            ua.setStatus(status);
//        } catch (Exception e) {
//            JOptionPane.showMessageDialog(this, "An error occurred");
//        }
    }//GEN-LAST:event_addUserjButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton activejRadioButton;
    private javax.swing.JButton addUserjButton;
    private javax.swing.JButton backjButton;
    private javax.swing.JRadioButton disabledjRadioButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JComboBox organizationjComboBox;
    private javax.swing.JTextField passwordjTextField;
    private javax.swing.JComboBox rolejComboBox;
    private javax.swing.JLabel titlejLabel;
    private javax.swing.JTextField userNamejTextField;
    private javax.swing.JComboBox userjComboBox;
    // End of variables declaration//GEN-END:variables
}
