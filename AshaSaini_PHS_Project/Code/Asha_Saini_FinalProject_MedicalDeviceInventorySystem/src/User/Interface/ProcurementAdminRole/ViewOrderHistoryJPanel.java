/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package User.Interface.ProcurementAdminRole;

import Bsuiness.EcoSystem;
import Business.Order.MasterOrderCatalog;
import Business.Order.Order;
import Business.Order.OrderItem;
import java.awt.CardLayout;
import java.awt.Color;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Asha
 */
public class ViewOrderHistoryJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewOrderHistoryJPanel
     */
    private JPanel userProcessContainer;
    private EcoSystem system;
    private MasterOrderCatalog orderDelivery;
    public ViewOrderHistoryJPanel(JPanel userProcessContainer, EcoSystem system, MasterOrderCatalog orderDelivery) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.system = system;
        this.orderDelivery = orderDelivery;
        
        Color c = new Color(0, 85, 119);
        this.setBackground(c);
        populateDeliveryTable();
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backJButton = new javax.swing.JButton();
        titlejLabel = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        deliveryJTable = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        detailsorderJTable = new javax.swing.JTable();

        setBackground(new java.awt.Color(0, 85, 119));

        backJButton.setBackground(new java.awt.Color(30, 30, 30));
        backJButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        backJButton.setForeground(new java.awt.Color(255, 255, 255));
        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        titlejLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        titlejLabel.setForeground(new java.awt.Color(255, 255, 255));
        titlejLabel.setText("Procurement Admin - Order History");

        deliveryJTable.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        deliveryJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Order ID"
            }
        ));
        deliveryJTable.getTableHeader().setReorderingAllowed(false);
        deliveryJTable.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                deliveryJTableFocusGained(evt);
            }
        });
        jScrollPane3.setViewportView(deliveryJTable);

        detailsorderJTable.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        detailsorderJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Device Name", "Price", "Quantity", "Total Amount"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        detailsorderJTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(detailsorderJTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(176, 176, 176)
                        .addComponent(titlejLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addComponent(backJButton)))
                .addContainerGap(201, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(64, 64, 64)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 569, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 569, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addContainerGap(64, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(titlejLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 369, Short.MAX_VALUE)
                .addComponent(backJButton)
                .addGap(19, 19, 19))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(66, 66, 66)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(48, 48, 48)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(67, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
//        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

     private void populateDeliveryTable() {
        int rowCount = deliveryJTable.getRowCount();
        DefaultTableModel dtm = (DefaultTableModel) deliveryJTable.getModel();

        //delete all the previous rows
        for (int i = rowCount - 1; i >= 0; i--) {
            dtm.removeRow(i);
        }

        for (Order o : orderDelivery.getOrderList()) {
            Object[] row = new Object[1];
            row[0] = o;
            dtm.addRow(row);
        }
    }
     
     private void populateDetailsOrderTable() {

        //get the selected order
        int selectedRow = deliveryJTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please select an order from the list");
            return;
        }

        Order o = (Order) deliveryJTable.getValueAt(selectedRow, 0);
        if (null == o) {
            JOptionPane.showMessageDialog(this, "Failed to retrieve selected order's information");
            return;
        }

        int rowCount = detailsorderJTable.getRowCount();
        DefaultTableModel dtm = (DefaultTableModel) detailsorderJTable.getModel();

        //delete all the previous rows
        for (int i = rowCount - 1; i >= 0; i--) {
            dtm.removeRow(i);
        }

        for (OrderItem oi : o.getOrderItemList()) {
            Object[] row = new Object[4];
            row[0] = oi;
            row[1] = oi.getMedicalDevice().getPrice();
            row[2] = oi.getQuantity();
            row[3] = (oi.getMedicalDevice().getPrice() * oi.getQuantity());
            dtm.addRow(row);
        }
    }
    private void deliveryJTableFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_deliveryJTableFocusGained
        // TODO add your handling code here:
        populateDetailsOrderTable();
    }//GEN-LAST:event_deliveryJTableFocusGained


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JTable deliveryJTable;
    private javax.swing.JTable detailsorderJTable;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel titlejLabel;
    // End of variables declaration//GEN-END:variables
}
